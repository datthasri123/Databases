apiVersion: v1
kind: Secret
metadata: 
  name: db-secret
type: opaque
data:
  DB_Host: c3FsMDEK
  DB_User: cm9vdAo=
  DB_Password: GFzc3dvcmQxMjMK
  
  
apiVersion: v1
kind: Secret
metadata:
  name: mysecret
type: Opaque
data:
  username: YWRtaW4=
  password: MWYyZDFlMmU2N2Rm
  
apiVersion: v1
kind: Pod
metadata:
  name: webapp-pod
  labels:
    name: webapp-pod
spec:
  containers:
    - name: webapp
      image: kodekloud/simple-webapp-mysql
      envFrom:
      - secretRef:
        name: db-secret


apiVersion: v1
kind: Pod
metadata:
  name: ubuntu-sleepeer
  labels:
    name: ubuntu-sleeper
spec:
  securityContext:
    runAsUser: 1010
  containers:
    image: ubuntu
    name: ubuntu-sleeper
  - command:
    - sleep
    - "4500"





apiVersion: v1
kind: Pod
metadata:
  name: ubuntu-sleepeer
  labels:
    name: ubuntu-sleeper
spec:
  securityContext:
    runAsUser: 1010
  containers:
  - name: ubuntu-sleepeer
    image: ubuntu
  - command:
    - sleep
    - "4500"



==================================================================

-- this wont work, but the second ones work

apiVersion: v1
kind: Pod
metadata:
  name: ubuntu-sleeper
  namespace: default
spec:
  securityContext:
    capabilities:
      add: ["SYS_TIME"]
  containers:
  - command:
    - sleep
    - "4800"
    image: ubuntu
    name: ubuntu-sleeper



apiVersion: v1
kind: Pod
metadata:
  name: ubuntu-sleeper
  namespace: default
spec:
  containers:
  - command:
    - sleep
    - "4800"
    image: ubuntu
    name: ubuntu-sleeper
    securityContext:
      capabilities:
        add: ["SYS_TIME"]
=====================================================================



apiVersion: v1
kind: Pod
metadata:
  name: mosquito
spec:
  containers:
    - image: nginx
      name: mosquito


=================================================================

// Create a taint tolerant to taint

apiVersion: v1
kind: Pod
metadata:
  name: bee
spec:
  containers:
    - image: nginx
      name: bee
  tolerations:
  - key: "spray"
    operator: "Equal"
    value: "mortien"
    effect: "NoSchedule"  // this particular line is also required it seems



Do you see any taints on controlplane node?
> kubectl describe node controlplane



Remove the taint on controlplane, which currently has the taint effect of NoSchedule.
> kubectl taint nodes controlplane node-role.kubernetes.io/control-plane:NoSchedule-


How many Labels exist on node node01?
> kubectl describe node node01


Apply a label color=blue to node node01
> kubectl label node node01 color=blue


Create a new deployment named blue with the nginx image and 3 replicas

apiVersion: v1
kind: deployment
metadata:
  name: blue
spec:
  metadata:
    name: blue
  spec:
    containers:
      - name: nginx
        image: nginx

  replicas: 3


// or use the below command

kubectl create deployment blue --image=nginx --replicas=3


